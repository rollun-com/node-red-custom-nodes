/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * OpenAPI spec version: v1.17.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FulfillmentApi);
  }
}(this, function(expect, FulfillmentApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FulfillmentApi.IssueRefundRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('IssueRefundRequest', function() {
    it('should create an instance of IssueRefundRequest', function() {
      // uncomment below and update the code to test IssueRefundRequest
      //var instane = new FulfillmentApi.IssueRefundRequest();
      //expect(instance).to.be.a(FulfillmentApi.IssueRefundRequest);
    });

    it('should have the property reasonForRefund (base name: "reasonForRefund")', function() {
      // uncomment below and update the code to test the property reasonForRefund
      //var instane = new FulfillmentApi.IssueRefundRequest();
      //expect(instance).to.be();
    });

    it('should have the property comment (base name: "comment")', function() {
      // uncomment below and update the code to test the property comment
      //var instane = new FulfillmentApi.IssueRefundRequest();
      //expect(instance).to.be();
    });

    it('should have the property refundItems (base name: "refundItems")', function() {
      // uncomment below and update the code to test the property refundItems
      //var instane = new FulfillmentApi.IssueRefundRequest();
      //expect(instance).to.be();
    });

    it('should have the property orderLevelRefundAmount (base name: "orderLevelRefundAmount")', function() {
      // uncomment below and update the code to test the property orderLevelRefundAmount
      //var instane = new FulfillmentApi.IssueRefundRequest();
      //expect(instance).to.be();
    });

  });

}));
