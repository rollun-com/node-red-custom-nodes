/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * OpenAPI spec version: v1.17.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FulfillmentApi);
  }
}(this, function(expect, FulfillmentApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FulfillmentApi.Order();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Order', function() {
    it('should create an instance of Order', function() {
      // uncomment below and update the code to test Order
      //var instane = new FulfillmentApi.Order();
      //expect(instance).to.be.a(FulfillmentApi.Order);
    });

    it('should have the property buyer (base name: "buyer")', function() {
      // uncomment below and update the code to test the property buyer
      //var instane = new FulfillmentApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property buyerCheckoutNotes (base name: "buyerCheckoutNotes")', function() {
      // uncomment below and update the code to test the property buyerCheckoutNotes
      //var instane = new FulfillmentApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property cancelStatus (base name: "cancelStatus")', function() {
      // uncomment below and update the code to test the property cancelStatus
      //var instane = new FulfillmentApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property creationDate (base name: "creationDate")', function() {
      // uncomment below and update the code to test the property creationDate
      //var instane = new FulfillmentApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property ebayCollectAndRemitTax (base name: "ebayCollectAndRemitTax")', function() {
      // uncomment below and update the code to test the property ebayCollectAndRemitTax
      //var instane = new FulfillmentApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property fulfillmentHrefs (base name: "fulfillmentHrefs")', function() {
      // uncomment below and update the code to test the property fulfillmentHrefs
      //var instane = new FulfillmentApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property fulfillmentStartInstructions (base name: "fulfillmentStartInstructions")', function() {
      // uncomment below and update the code to test the property fulfillmentStartInstructions
      //var instane = new FulfillmentApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property lastModifiedDate (base name: "lastModifiedDate")', function() {
      // uncomment below and update the code to test the property lastModifiedDate
      //var instane = new FulfillmentApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property legacyOrderId (base name: "legacyOrderId")', function() {
      // uncomment below and update the code to test the property legacyOrderId
      //var instane = new FulfillmentApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property lineItems (base name: "lineItems")', function() {
      // uncomment below and update the code to test the property lineItems
      //var instane = new FulfillmentApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property orderFulfillmentStatus (base name: "orderFulfillmentStatus")', function() {
      // uncomment below and update the code to test the property orderFulfillmentStatus
      //var instane = new FulfillmentApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property orderId (base name: "orderId")', function() {
      // uncomment below and update the code to test the property orderId
      //var instane = new FulfillmentApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property orderPaymentStatus (base name: "orderPaymentStatus")', function() {
      // uncomment below and update the code to test the property orderPaymentStatus
      //var instane = new FulfillmentApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property paymentSummary (base name: "paymentSummary")', function() {
      // uncomment below and update the code to test the property paymentSummary
      //var instane = new FulfillmentApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property pricingSummary (base name: "pricingSummary")', function() {
      // uncomment below and update the code to test the property pricingSummary
      //var instane = new FulfillmentApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property program (base name: "program")', function() {
      // uncomment below and update the code to test the property program
      //var instane = new FulfillmentApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property salesRecordReference (base name: "salesRecordReference")', function() {
      // uncomment below and update the code to test the property salesRecordReference
      //var instane = new FulfillmentApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property sellerId (base name: "sellerId")', function() {
      // uncomment below and update the code to test the property sellerId
      //var instane = new FulfillmentApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property totalFeeBasisAmount (base name: "totalFeeBasisAmount")', function() {
      // uncomment below and update the code to test the property totalFeeBasisAmount
      //var instane = new FulfillmentApi.Order();
      //expect(instance).to.be();
    });

  });

}));
