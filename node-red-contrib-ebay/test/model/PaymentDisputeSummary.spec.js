/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * OpenAPI spec version: v1.17.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FulfillmentApi);
  }
}(this, function(expect, FulfillmentApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FulfillmentApi.PaymentDisputeSummary();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PaymentDisputeSummary', function() {
    it('should create an instance of PaymentDisputeSummary', function() {
      // uncomment below and update the code to test PaymentDisputeSummary
      //var instane = new FulfillmentApi.PaymentDisputeSummary();
      //expect(instance).to.be.a(FulfillmentApi.PaymentDisputeSummary);
    });

    it('should have the property amount (base name: "amount")', function() {
      // uncomment below and update the code to test the property amount
      //var instane = new FulfillmentApi.PaymentDisputeSummary();
      //expect(instance).to.be();
    });

    it('should have the property buyerUsername (base name: "buyerUsername")', function() {
      // uncomment below and update the code to test the property buyerUsername
      //var instane = new FulfillmentApi.PaymentDisputeSummary();
      //expect(instance).to.be();
    });

    it('should have the property closedDate (base name: "closedDate")', function() {
      // uncomment below and update the code to test the property closedDate
      //var instane = new FulfillmentApi.PaymentDisputeSummary();
      //expect(instance).to.be();
    });

    it('should have the property openDate (base name: "openDate")', function() {
      // uncomment below and update the code to test the property openDate
      //var instane = new FulfillmentApi.PaymentDisputeSummary();
      //expect(instance).to.be();
    });

    it('should have the property orderId (base name: "orderId")', function() {
      // uncomment below and update the code to test the property orderId
      //var instane = new FulfillmentApi.PaymentDisputeSummary();
      //expect(instance).to.be();
    });

    it('should have the property paymentDisputeId (base name: "paymentDisputeId")', function() {
      // uncomment below and update the code to test the property paymentDisputeId
      //var instane = new FulfillmentApi.PaymentDisputeSummary();
      //expect(instance).to.be();
    });

    it('should have the property paymentDisputeStatus (base name: "paymentDisputeStatus")', function() {
      // uncomment below and update the code to test the property paymentDisputeStatus
      //var instane = new FulfillmentApi.PaymentDisputeSummary();
      //expect(instance).to.be();
    });

    it('should have the property reason (base name: "reason")', function() {
      // uncomment below and update the code to test the property reason
      //var instane = new FulfillmentApi.PaymentDisputeSummary();
      //expect(instance).to.be();
    });

    it('should have the property respondByDate (base name: "respondByDate")', function() {
      // uncomment below and update the code to test the property respondByDate
      //var instane = new FulfillmentApi.PaymentDisputeSummary();
      //expect(instance).to.be();
    });

  });

}));
