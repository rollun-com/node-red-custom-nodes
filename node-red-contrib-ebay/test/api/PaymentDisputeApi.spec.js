/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * OpenAPI spec version: v1.17.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FulfillmentApi);
  }
}(this, function(expect, FulfillmentApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FulfillmentApi.PaymentDisputeApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PaymentDisputeApi', function() {
    describe('acceptPaymentDispute', function() {
      it('should call acceptPaymentDispute successfully', function(done) {
        //uncomment below and update the code to test acceptPaymentDispute
        //instance.acceptPaymentDispute(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addEvidence', function() {
      it('should call addEvidence successfully', function(done) {
        //uncomment below and update the code to test addEvidence
        //instance.addEvidence(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('contestPaymentDispute', function() {
      it('should call contestPaymentDispute successfully', function(done) {
        //uncomment below and update the code to test contestPaymentDispute
        //instance.contestPaymentDispute(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fetchEvidenceContent', function() {
      it('should call fetchEvidenceContent successfully', function(done) {
        //uncomment below and update the code to test fetchEvidenceContent
        //instance.fetchEvidenceContent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getActivities', function() {
      it('should call getActivities successfully', function(done) {
        //uncomment below and update the code to test getActivities
        //instance.getActivities(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPaymentDispute', function() {
      it('should call getPaymentDispute successfully', function(done) {
        //uncomment below and update the code to test getPaymentDispute
        //instance.getPaymentDispute(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPaymentDisputeSummaries', function() {
      it('should call getPaymentDisputeSummaries successfully', function(done) {
        //uncomment below and update the code to test getPaymentDisputeSummaries
        //instance.getPaymentDisputeSummaries(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateEvidence', function() {
      it('should call updateEvidence successfully', function(done) {
        //uncomment below and update the code to test updateEvidence
        //instance.updateEvidence(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uploadEvidenceFile', function() {
      it('should call uploadEvidenceFile successfully', function(done) {
        //uncomment below and update the code to test uploadEvidenceFile
        //instance.uploadEvidenceFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
