/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * OpenAPI spec version: v1.17.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Amount from './Amount';
import SellerActionsToRelease from './SellerActionsToRelease';

/**
* The PaymentHold model module.
* @module model/PaymentHold
* @version v1.17.0
*/
export default class PaymentHold {
    /**
    * Constructs a new <code>PaymentHold</code>.
    * This type contains information about a hold placed on a payment to a seller for an order, including the reason why the buyer&#x27;s payment for the order is being held, the expected release date of the funds into the seller&#x27;s account, the current state of the hold, and the actual release date if the payment has been released, and possible actions the seller can take to expedite the payout of funds into their account.
    * @alias module:model/PaymentHold
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>PaymentHold</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/PaymentHold} obj Optional instance to populate.
    * @return {module:model/PaymentHold} The populated <code>PaymentHold</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PaymentHold();
                        
            
            if (data.hasOwnProperty('expectedReleaseDate')) {
                obj['expectedReleaseDate'] = ApiClient.convertToType(data['expectedReleaseDate'], 'String');
            }
            if (data.hasOwnProperty('holdAmount')) {
                obj['holdAmount'] = Amount.constructFromObject(data['holdAmount']);
            }
            if (data.hasOwnProperty('holdReason')) {
                obj['holdReason'] = ApiClient.convertToType(data['holdReason'], 'String');
            }
            if (data.hasOwnProperty('holdState')) {
                obj['holdState'] = ApiClient.convertToType(data['holdState'], 'String');
            }
            if (data.hasOwnProperty('releaseDate')) {
                obj['releaseDate'] = ApiClient.convertToType(data['releaseDate'], 'String');
            }
            if (data.hasOwnProperty('sellerActionsToRelease')) {
                obj['sellerActionsToRelease'] = ApiClient.convertToType(data['sellerActionsToRelease'], [SellerActionsToRelease]);
            }
        }
        return obj;
    }

    /**
    * The date and time that the payment being held is expected to be released to the seller. This timestamp is in ISO 8601 format, which uses the 24-hour Universal Coordinated Time (UTC) clock. This field will be returned if known by eBay. Format: [YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z Example: 2015-08-04T19:09:02.768Z
    * @member {String} expectedReleaseDate
    */
    'expectedReleaseDate' = undefined;
    /**
    * @member {module:model/Amount} holdAmount
    */
    'holdAmount' = undefined;
    /**
    * The reason that the payment is being held. A seller's payment may be held for a number of reasons, including when the seller is new, the seller's level is below standard, or if a return case or 'Significantly not as described' case is pending against the seller. This field is always returned with the paymentHolds array.
    * @member {String} holdReason
    */
    'holdReason' = undefined;
    /**
    * The current stage or condition of the hold. This field is always returned with the paymentHolds array. Applicable values: HELD HELD_PENDING NOT_HELD RELEASE_CONFIRMED RELEASE_FAILED RELEASE_PENDING RELEASED
    * @member {String} holdState
    */
    'holdState' = undefined;
    /**
    * The date and time that the payment being held was actually released to the seller. This timestamp is in ISO 8601 format, which uses the 24-hour Universal Coordinated Time (UTC) clock. This field is not returned until the seller's payment is actually released into the seller's account. Format: [YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z Example: 2015-08-04T19:09:02.768Z
    * @member {String} releaseDate
    */
    'releaseDate' = undefined;
    /**
    * A list of one or more possible actions that the seller can take to expedite the release of the payment hold.
    * @member {Array.<module:model/SellerActionsToRelease>} sellerActionsToRelease
    */
    'sellerActionsToRelease' = undefined;




}
