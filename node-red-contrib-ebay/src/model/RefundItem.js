/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * OpenAPI spec version: v1.17.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LegacyReference from './LegacyReference';
import SimpleAmount from './SimpleAmount';

/**
* The RefundItem model module.
* @module model/RefundItem
* @version v1.17.0
*/
export default class RefundItem {
    /**
    * Constructs a new <code>RefundItem</code>.
    * This type is used if the seller is issuing a refund for one or more individual order line items in a multiple line item order. Otherwise, the seller just uses the orderLevelRefundAmount container to specify the amount of the refund for the entire order.
    * @alias module:model/RefundItem
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>RefundItem</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/RefundItem} obj Optional instance to populate.
    * @return {module:model/RefundItem} The populated <code>RefundItem</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RefundItem();
                        
            
            if (data.hasOwnProperty('refundAmount')) {
                obj['refundAmount'] = SimpleAmount.constructFromObject(data['refundAmount']);
            }
            if (data.hasOwnProperty('lineItemId')) {
                obj['lineItemId'] = ApiClient.convertToType(data['lineItemId'], 'String');
            }
            if (data.hasOwnProperty('legacyReference')) {
                obj['legacyReference'] = LegacyReference.constructFromObject(data['legacyReference']);
            }
        }
        return obj;
    }

    /**
    * @member {module:model/SimpleAmount} refundAmount
    */
    'refundAmount' = undefined;
    /**
    * The unique identifier of an order line item. This identifier is created once a buyer purchases a 'Buy It Now' item or if an auction listing ends with a winning bidder. Either this field or the legacyReference container is needed to identify an individual order line item that will receive a refund. Note: The lineItemId field is used to identify an order line item in REST API format, and the legacyReference container is used to identify an order line item in Trading/legacy API format. Both legacy and REST API identifiers are returned in getOrder (Fulfillment API) and GetOrders (Trading API).
    * @member {String} lineItemId
    */
    'lineItemId' = undefined;
    /**
    * @member {module:model/LegacyReference} legacyReference
    */
    'legacyReference' = undefined;




}
