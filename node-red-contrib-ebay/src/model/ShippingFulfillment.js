/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * OpenAPI spec version: v1.17.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LineItemReference from './LineItemReference';

/**
* The ShippingFulfillment model module.
* @module model/ShippingFulfillment
* @version v1.17.0
*/
export default class ShippingFulfillment {
    /**
    * Constructs a new <code>ShippingFulfillment</code>.
    * This type contains the complete details of an existing fulfillment for an order.
    * @alias module:model/ShippingFulfillment
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>ShippingFulfillment</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/ShippingFulfillment} obj Optional instance to populate.
    * @return {module:model/ShippingFulfillment} The populated <code>ShippingFulfillment</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ShippingFulfillment();
                        
            
            if (data.hasOwnProperty('fulfillmentId')) {
                obj['fulfillmentId'] = ApiClient.convertToType(data['fulfillmentId'], 'String');
            }
            if (data.hasOwnProperty('lineItems')) {
                obj['lineItems'] = ApiClient.convertToType(data['lineItems'], [LineItemReference]);
            }
            if (data.hasOwnProperty('shipmentTrackingNumber')) {
                obj['shipmentTrackingNumber'] = ApiClient.convertToType(data['shipmentTrackingNumber'], 'String');
            }
            if (data.hasOwnProperty('shippedDate')) {
                obj['shippedDate'] = ApiClient.convertToType(data['shippedDate'], 'String');
            }
            if (data.hasOwnProperty('shippingCarrierCode')) {
                obj['shippingCarrierCode'] = ApiClient.convertToType(data['shippingCarrierCode'], 'String');
            }
        }
        return obj;
    }

    /**
    * The unique identifier of the fulfillment; for example, 9405509699937003457459. This eBay-generated value is created with a successful createShippingFulfillment call.
    * @member {String} fulfillmentId
    */
    'fulfillmentId' = undefined;
    /**
    * This array contains a list of one or more line items (and purchased quantity) to which the fulfillment applies.
    * @member {Array.<module:model/LineItemReference>} lineItems
    */
    'lineItems' = undefined;
    /**
    * The tracking number provided by the shipping carrier for the package shipped in this fulfillment. This field is returned if available.
    * @member {String} shipmentTrackingNumber
    */
    'shipmentTrackingNumber' = undefined;
    /**
    * The date and time that the fulfillment package was shipped. This timestamp is in ISO 8601 format, which uses the 24-hour Universal Coordinated Time (UTC) clock. This field should only be returned if the package has been shipped. Format: [YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z Example: 2015-08-04T19:09:02.768Z
    * @member {String} shippedDate
    */
    'shippedDate' = undefined;
    /**
    * The eBay code identifying the shipping carrier for this fulfillment. This field is returned if available. Note: The Trading API's ShippingCarrierCodeType enumeration type contains the most current list of eBay shipping carrier codes and the countries served by each carrier. See ShippingCarrierCodeType.
    * @member {String} shippingCarrierCode
    */
    'shippingCarrierCode' = undefined;




}
