/**
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * OpenAPI spec version: v1.17.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The Amount model module.
* @module model/Amount
* @version v1.17.0
*/
export default class Amount {
    /**
    * Constructs a new <code>Amount</code>.
    * This type defines the monetary value of an amount. It can provide the amount in both the currency used on the eBay site where an item is being offered and the conversion of that value into another currency, if applicable.
    * @alias module:model/Amount
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>Amount</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Amount} obj Optional instance to populate.
    * @return {module:model/Amount} The populated <code>Amount</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Amount();
                        
            
            if (data.hasOwnProperty('convertedFromCurrency')) {
                obj['convertedFromCurrency'] = ApiClient.convertToType(data['convertedFromCurrency'], 'String');
            }
            if (data.hasOwnProperty('convertedFromValue')) {
                obj['convertedFromValue'] = ApiClient.convertToType(data['convertedFromValue'], 'String');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }

    /**
    * A three-letter ISO 4217 code that indicates the currency of the amount in the convertedFromValue field. This value is required or returned only if currency conversion/localization is required, and represents the pre-conversion currency. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/ba:CurrencyCodeEnum'>eBay API documentation</a>
    * @member {String} convertedFromCurrency
    */
    'convertedFromCurrency' = undefined;
    /**
    * The monetary amount before any conversion is performed, in the currency specified by the convertedFromCurrency field. This value is required or returned only if currency conversion/localization is required. The value field contains the converted amount of this value, in the currency specified by the currency field.
    * @member {String} convertedFromValue
    */
    'convertedFromValue' = undefined;
    /**
    * A three-letter ISO 4217 code that indicates the currency of the amount in the value field. If currency conversion/localization is required, this is the post-conversion currency of the amount in the value field. Default: The default currency of the eBay marketplace that hosts the listing. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/ba:CurrencyCodeEnum'>eBay API documentation</a>
    * @member {String} currency
    */
    'currency' = undefined;
    /**
    * The monetary amount, in the currency specified by the currency field. If currency conversion/localization is required, this value is the converted amount, and the convertedFromValue field contains the amount in the original currency. Required in the amount type.
    * @member {String} value
    */
    'value' = undefined;




}
